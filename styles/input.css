@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --nav-background: rgb(40, 40, 40);
  --nav-padding-x: 40px;
  --nav-padding-y: 20px;
  --nav-txt-row-gap: 32px;
  --bezier: cubic-bezier(.75, 0, .175, 1);
}

body {
  font-family: sans-serif;
}

/* navbar transition : Kept just for a reference as css blocks are clearer than cluttered tailwind classes (at least for visualizing the styles)  */
/* li {
  position: relative;
}

li::after {
  content: "";
  transform-origin: right; 
  background-color: currentColor;
  width: 100%;
  height: 1px;
  transition: transform .2s;
  position: absolute;
  bottom: 0;
  left: 0;
  transform: scaleX(0);
}
li:hover::after {
  transform-origin: left;
  transform: scaleX(1);
} */

.mobile-menu {
  transform: translateX(-100%);
  transition: transform .6s var(--bezier), opacity .6s var(--bezier);
  display: block;
}

.drawer.open+.mobile-menu {
  transform: translateX(0);
}

.animated-plus {
  width: 10px;
  height: 10px;
  position: relative;
  transition: transform .6s var(--bezier), opacity .6s var(--bezier);
}

.animated-plus::before,
.animated-plus::after {
  content: "";
  background-color: currentColor;
  transition: transform .4s ease-in-out, opacity .4s ease-in-out;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.animated-plus::before {
  opacity: 1;
  width: 10px;
  height: 2px;
  /* this is the horizontal bar initially, but the vertical bar after the rotation */
}

.animated-plus::after {
  opacity: 1;
  height: 10px;
  width: 2px;
  /* this is the vertical bar, but the horizontal bar after rotation */
}

.animated-plus-btn .animated-plus.open {
  transform: rotate(180deg);
}

.animated-plus-btn .animated-plus.open::after {
  opacity: 0;
}

/* animating mobile menu items appearance start */

/* fadein */
@keyframes fadeIn {
  0% {
    opacity: 0;
    transform: translateX(-110%);
  }

  10% {
    opacity: .2;
  }

  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

.animated-plus-btn {
  opacity: 1;
  will-change: transform, opacity;
  /* animation: fadeIn 1s forwards; */
  /* using animation property here is a bad idea as we won't see the animation . 
  The proper usage is to add the animation property to  .animated-plus-btn when the drawer has the open class*/
}

.drawer.open+.mobile-menu .animated-plus-btn {
  animation: fadeIn var(--bezier) 1s backwards;
}

.drawer.open+.mobile-menu ul li:nth-child(1) .animated-plus-btn {
  animation-delay: 100ms;
}

.drawer.open+.mobile-menu ul li:nth-child(2) .animated-plus-btn {
  animation-delay: 200ms;
}

.drawer.open+.mobile-menu ul li:nth-child(3) .animated-plus-btn {
  animation-delay: 300ms;
}

.drawer.open+.mobile-menu ul li:nth-child(4) .animated-plus-btn {
  animation-delay: 400ms;
}

/* animating mobile menu items appearance end */

/* toggling appearance of items to buy based on clicking animated-plus-btn (start) */
.items-to-buy-container {
  transition: height .6s var(--bezier);
}

.animated-plus-btn:has(.animated-plus.open)+.items-to-buy-container {
  height: 50px !important;
  /* Note number 7 in lessons-learnt.md has greater details */
}

/* toggling appearance of items to buy based on clicking animated-plus-btn (end) */