@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --nav-background: rgb(40, 40, 40);
  --nav-padding-x: 40px;
  --nav-padding-y: 20px;
  --nav-txt-row-gap: 32px;
  --bezier: cubic-bezier(.75, 0, .175, 1);
  --button-background: 64, 93, 230;
}

body {
  font-family: sans-serif;
}

/* navbar transition : Kept just for a reference as css blocks are clearer than cluttered tailwind classes (at least for visualizing the styles)  */
/* li {
  position: relative;
}

li::after {
  content: "";
  transform-origin: right; 
  background-color: currentColor;
  width: 100%;
  height: 1px;
  transition: transform .2s;
  position: absolute;
  bottom: 0;
  left: 0;
  transform: scaleX(0);
}
li:hover::after {
  transform-origin: left;
  transform: scaleX(1);
} */

.mobile-menu {
  transform: translateX(-100%);
  transition: transform .6s var(--bezier), opacity .6s var(--bezier);
  display: block;
}

.drawer.open+.mobile-menu {
  transform: translateX(0);
}

.animated-plus {
  width: 10px;
  height: 10px;
  position: relative;
  transition: transform .6s var(--bezier), opacity .6s var(--bezier);
}

.animated-plus::before,
.animated-plus::after {
  content: "";
  background-color: currentColor;
  transition: transform .4s ease-in-out, opacity .4s ease-in-out;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.animated-plus::before {
  opacity: 1;
  width: 10px;
  height: 2px;
  /* this is the horizontal bar initially, but the vertical bar after the rotation */
}

.animated-plus::after {
  opacity: 1;
  height: 10px;
  width: 2px;
  /* this is the vertical bar, but the horizontal bar after rotation */
}

.animated-plus-btn .animated-plus.open {
  transform: rotate(180deg);
}

.animated-plus-btn .animated-plus.open::after {
  opacity: 0;
}

/* animating mobile menu items appearance start */

/* fadein */
@keyframes fadeIn {
  0% {
    opacity: 0;
    transform: translateX(-110%);
  }

  10% {
    opacity: .2;
  }

  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

.animated-plus-btn {
  opacity: 1;
  will-change: transform, opacity;
  /* animation: fadeIn 1s forwards; */
  /* using animation property here is a bad idea as we won't see the animation . 
  The proper usage is to add the animation property to  .animated-plus-btn when the drawer has the open class*/
}

.drawer.open+.mobile-menu .animated-plus-btn {
  animation: fadeIn var(--bezier) 1s backwards;
}

.drawer.open+.mobile-menu ul li:nth-child(1) .animated-plus-btn {
  animation-delay: 100ms;
}

.drawer.open+.mobile-menu ul li:nth-child(2) .animated-plus-btn {
  animation-delay: 200ms;
}

.drawer.open+.mobile-menu ul li:nth-child(3) .animated-plus-btn {
  animation-delay: 300ms;
}

.drawer.open+.mobile-menu ul li:nth-child(4) .animated-plus-btn {
  animation-delay: 400ms;
}

@keyframes fadeInY {
  0% {
    transform: translateY(100%);
  }

  100% {
    transform: translateY(0);
  }
}

.drawer.open+.mobile-menu .user-account {
  animation: fadeInY var(--bezier) .6s backwards;
  animation-delay: 1s;
}

/* animating mobile menu items appearance end */

/* toggling appearance of items to buy based on clicking animated-plus-btn (start) */
.items-to-buy-container {
  transition: height .6s var(--bezier);
}

.animated-plus-btn:has(.animated-plus.open)+.items-to-buy-container {
  height: 50px !important;
  /* Note number 7 in lessons-learnt.md has greater details */
}

/* toggling appearance of items to buy based on clicking animated-plus-btn (end) */

/* cart start */
.cart {
  transition: transform .6s var(--bezier), opacity .6s var(--bezier);
  display: block;
}

.cart-drawer.open+.cart {
  transform: translateX(0);
}

.btn-wrapper a {
  background-image: linear-gradient(178deg, rgb(var(--button-background)), rgb(var(--button-background)) 10%, #00000012 10% 100%), linear-gradient(rgb(var(--button-background)), rgb(var(--button-background)));
  background-position: 100% -100%, 100% 100%;
  background-repeat: no-repeat;
  background-size: 100% 200%, 100% 100%;
  transition: background-position .3s cubic-bezier(.215, .61, .355, 1);
  line-height: 52px;
}

.btn-wrapper a:hover {
  background-position: 100% 25%, 100% 100%;
}

/* cart end */

/* swiper start */
:root {
  --swiper-pagination-bullet-inactive-opacity: .6;
}

.swiper {
  width: 100%;
  height: 100%;
  max-height: 570px;
  max-width: 1000px;
  /* overflow: hidden; */
  /* This class has overflow: hidden by default from the styles provided by swiperjs */
  /* overflow: visible !important; */

}

.swiper-slide {

  text-align: center;
  font-size: 18px;
  /* Center slide text vertically */
  display: flex;
  justify-content: center;
  align-items: center;

}

.swiper-slide img {
  display: block;
  max-width: 100%;
  object-fit: contain;
}

.swiper-pagination {
  display: flex;
  justify-content: center;
  align-items: center;
  bottom: 2rem !important;
}

.swiper-pagination-bullet {
  position: relative;
  background: rgba(207, 203, 203, 1) !important;
  height: 2px !important;
  width: 48px !important;
  overflow: visible !important;
  border-radius: 2px !important;
  margin: 0 10px;

}

.swiper-pagination-bullet::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 0;
  height: 100%;
  background-color: dodgerblue;
  opacity: 1;
}

.swiper-pagination-bullet-active.swiper-pagination-bullet::before {
  transition: width 5s linear;
  width: 100%;
}
/* swiper end */